"use strict";!function(n){n.jSlots=function(i,o){var t=this;t.$el=n(i),t.el=i,t.$el.data("jSlots",t),t.init=function(){t.options=n.extend({},n.jSlots.defaultOptions,o),t.setup(),t.bindEvents()},n.jSlots.defaultOptions={number:3,winnerNumber:1,spinner:"",spinEvent:"click",onStart:n.noop,onEnd:n.noop,onWin:n.noop,easing:"swing",time:7e3,loops:6,delay:0},t.randomRange=function(n,i){return Math.floor(Math.random()*(1+i-n))+n},t.isSpinning=!1,t.spinSpeed=0,t.winCount=0,t.doneCount=0,t.$liHeight=0,t.$liWidth=0,t.winners=[],t.allSlots=[],t.setup=function(){var n=t.$el,i=n.find("li").first();t.$liHeight=i.outerHeight(),t.$liWidth=i.outerWidth(),t.liCount=t.$el.children().length,t.listHeight=t.$liHeight*t.liCount,t.increment=t.options.time/t.options.loops/t.options.loops,n.css("position","relative"),i.clone().appendTo(n),t.$wrapper=n.wrap('<div class="jSlots-wrapper"></div>').parent(),t.$el.remove();for(var o=t.options.number-1;o>=0;o--)t.allSlots.push(new t.Slot)},t.bindEvents=function(){n(t.options.spinner).bind(t.options.spinEvent,function(n){t.isSpinning||setTimeout(function(){t.playSlots()},t.options.delay)})},t.Slot=function(){this.spinSpeed=0,this.el=t.$el.clone().appendTo(t.$wrapper)[0],this.$el=n(this.el),this.loopCount=0,this.number=0},t.Slot.prototype={spinEm:function(){var n=this;n.$el.css("top",-t.listHeight).animate({top:"0px"},n.spinSpeed,"linear",function(){n.lowerSpeed()})},lowerSpeed:function(){this.spinSpeed+=t.increment,this.loopCount++,this.loopCount<t.options.loops?this.spinEm():this.finish()},finish:function(){var n=this,i=o.winnerNumber,e=-(t.$liHeight*i-t.$liHeight),s=.5*this.spinSpeed*t.liCount/i;n.$el.css("top",-t.listHeight).animate({top:e},s,t.options.easing,function(){t.checkWinner(i,n)})}},t.checkWinner=function(i,o){if(t.doneCount++,o.number=i,(n.isArray(t.options.winnerNumber)&&t.options.winnerNumber.indexOf(i)>-1||i===t.options.winnerNumber)&&(t.winCount++,t.winners.push(o.$el)),t.doneCount===t.options.number){var e=[];n.each(t.allSlots,function(n,i){e[n]=i.number}),n.isFunction(t.options.onEnd)&&t.options.onEnd(e),t.winCount&&n.isFunction(t.options.onWin)&&t.options.onWin(t.winCount,t.winners,e),t.isSpinning=!1}},t.playSlots=function(){t.isSpinning=!0,t.winCount=0,t.doneCount=0,t.winners=[],n.isFunction(t.options.onStart)&&t.options.onStart(),n.each(t.allSlots,function(n,i){this.spinSpeed=0,this.loopCount=0,this.spinEm()})},t.onWin=function(){n.isFunction(t.options.onWin)&&t.options.onWin()},t.init()},n.fn.jSlots=function(i){if(this.length)return this.each(function(){new n.jSlots(this,i)})}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
