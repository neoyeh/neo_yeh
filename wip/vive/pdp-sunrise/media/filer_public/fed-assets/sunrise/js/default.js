!function(){function e(t,n,i){function a(r,s){if(!n[r]){if(!t[r]){var d="function"==typeof require&&require;if(!s&&d)return d(r,!0);if(o)return o(r,!0);var c=new Error("Cannot find module '"+r+"'");throw c.code="MODULE_NOT_FOUND",c}var l=n[r]={exports:{}};t[r][0].call(l.exports,function(e){return a(t[r][1][e]||e)},l,l.exports,e,t,n,i)}return n[r].exports}for(var o="function"==typeof require&&require,r=0;r<i.length;r++)a(i[r]);return a}return e}()({1:[function(e,t,n){"use strict";var i=function(e){return e&&e.__esModule?e:{default:e}}(e("./libs/typemate")),a=new ScrollMagic.Controller({loglevel:0,addIndicators:!1}),o=new ScrollMagic.Controller({addIndicators:!1,globalSceneOptions:{triggerHook:"onEnter"}}),r=new ScrollMagic.Controller({addIndicators:!1,globalSceneOptions:{triggerHook:"onLeave"}}),s=new ScrollMagic.Controller({addIndicators:!1,globalSceneOptions:{}}),d={mobileMaxResolution:function(){return 991},isRtl:function(){return $("body").hasClass("rtl")},isMobile:function(){return $(window).width()<=d.mobileMaxResolution()},forcePageReload:function(){$(window).width()<=d.mobileMaxResolution()&&location.reload(),$(window).width(),d.mobileMaxResolution()},updateScrollDurationPosition:function(e,t){var n=d.getScrollDurationPosition(e),i=n[0],a=n[1];t.offset(i),t.duration(a)},getScrollDurationPosition:function(e){var t=0,n=0,i=5,a=5,o=e.outerHeight();return void 0!==e.data("top-trigger-percentage")&&(i=e.data("top-trigger-percentage")),t=parseInt(o*(i/100),10),void 0!==e.data("bottom-trigger-percentage")&&(a=e.data("bottom-trigger-percentage")),n=o-parseInt(o*(a/100),10)-t,[t,n]}},c={init:function(){var e=["us","uk","sg","nz","my-en","mea-en","in","hk","eu","ca","au"],t=$(document.querySelector("body")).attr("data-site");if(e.indexOf(t)>=0){var n=document.querySelectorAll(".sunrise-20-page")[0];new i.default(n,{selector:".text-fix-widow",minWords:2}).apply()}}},l={init:function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px")),window.addEventListener("resize",function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"))})}},u={init:function(){var e=document.querySelectorAll(".page-sub-header .sub-header-link-area");if(e.length>0){[e[0].querySelectorAll(".sub-header-toggle-btn")[0],e[0].querySelectorAll(".page-sub-header-bg")[0]].forEach(function(t){t&&(t.onclick=function(){e[0].classList.contains("active")?e[0].classList.remove("active"):e[0].classList.add("active")})})}}},f={init:function(){var e=$(".recommend-carousel-area"),t=!1;"rtl"===$("html").attr("dir")&&(t=!0),e.length>0&&e.owlCarousel({rtl:t,center:!0,loop:!0,nav:!0,navText:["<div data-event-category='pdp' data-event-action='click-arrow' data-event-label='arrow-prev-focus3' data-event-gtm='event-tracking' style='width:100%;height:100%;'><div class='icon-nav icon-prev'></div></div>","<div data-event-category='pdp' data-event-action='click-arrow' data-event-label='arrow-next-focus3' data-event-gtm='event-tracking' style='width:100%;height:100%;'><div class='icon-nav icon-next'></div></div>"],responsive:{1920:{items:3},1366:{items:3},992:{items:3},0:{items:1}}})}},g=function(){var e={imagelength:61,imageLoadLength:[],init:function(){var t=$(".section-scroll-image-play");t.length>0&&$.each(t,function(t,n){var i=$(this);e.setupAnimation(i,t)})},setupAnimation:function(t,n){e.imageLoadLength[n]=0,e.preloadImages(e.imagelength,t,n)},preloadImages:function(t,n,i){for(var a=n.find(".master-area"),o=0;o<t;o++){var r=document.createElement("div");r.className="lazy bg-image-item bg-image-item--".concat(o),a.append(r)}e.startAnimation(n),e.setBgImage(0,a,n);var s;if("IntersectionObserver"in window){s=document.querySelectorAll(".lazy");var d={root:null,rootMargin:"1000px"},c=new IntersectionObserver(function(e,t){e.forEach(function(e){if(e.isIntersecting){var t=e.target;t.classList.remove("lazy"),c.unobserve(t)}})},d);s.forEach(function(e){c.observe(e)})}else{var l,u=function e(){l&&clearTimeout(l),l=setTimeout(function(){var t=window.pageYOffset;s.forEach(function(e){e.offsetTop<window.innerHeight+t&&(e.src=e.dataset.src,e.classList.remove("lazy"))}),0==s.length&&(document.removeEventListener("scroll",e),window.removeEventListener("resize",e),window.removeEventListener("orientationChange",e))},20)};s=document.querySelectorAll(".lazy"),document.addEventListener("scroll",u),window.addEventListener("resize",u),window.addEventListener("orientationChange",u)}},startAnimation:function(t){var n=t.find(".master-area");n.show();new ScrollMagic.Scene({triggerElement:t[0],duration:"500%"}).setPin(t[0],{pushFollowers:!0,spacerClass:"custome-id-pin-banner"}).addTo(r).on("progress",function(i){e.setBgImage(100*i.progress,n,t)})},setBgImage:function(t,n,i){var a,o=parseInt(10*t)/10;if(a=parseInt(o*e.imagelength/25)>e.imagelength?e.imagelength-1:parseInt(o*e.imagelength/25),o<=25)i.find(".master-area").show(0),n.find(".bg-image-item.active").removeClass("active"),n.find(".bg-image-item").eq(a).addClass("active"),a>=33&&a<42?i.find(".master-area .bg-mask").css({opacity:"".concat((42-a)/10)}):i.find(".master-area .bg-mask").css({opacity:0}),i.find(".wording-area--1, .wording-area--2, .wording-area--3").css({opacity:0}),i.find(".bg-block--1").css({top:0});else if(o<=40){var r=o-25;i.find(".master-area").hide(0),i.find(".wording-area--1").css({opacity:1*r/15,transform:"translate(0, ".concat(30*(15-r)/15,"px)")}),i.find(".wording-area--2, .wording-area--3").css({opacity:0}),i.find(".bg-block--1").css({top:0})}else if(o<=50)i.find(".wording-area--1").css({opacity:1,transform:"translate(0, 0)"}),i.find(".master-area").hide(0),i.find(".wording-area--2, .wording-area--3").css({opacity:0}),i.find(".bg-block--1").css({top:0});else if(o<=65){var s=o-50;s<7.5?i.find(".wording-area--1").css({opacity:1-2*s/15,transform:"translate(0, ".concat(2*s*-6,"px)")}):i.find(".wording-area--1").css({opacity:0}),s>12?i.find(".wording-area--2").css({opacity:Math.abs(2*(1.5-2*s/15)),transform:"translate(0, ".concat(30*(15-s)/15*2,"px)")}):i.find(".wording-area--2").css({opacity:0}),i.find(".bg-block--1").css({top:"".concat(-1*s*10/15*10,"%")}),i.find(".bg-block--2, .gradient-box").css({top:"".concat(40*(15-s)/15,"%")}),i.find(".master-area").hide(0),i.find(".wording-area--3").css({opacity:0}),i.find(".gradient-box").css({transform:"scaleX(1)",opacity:1,top:0})}else if(o<=70){var d=o-65;i.find(".gradient-box").css({transform:"scaleX(".concat(1+.6*d/5,")"),opacity:1,top:0}),i.find(".master-area").hide(0),i.find(".wording-area--1, .wording-area--3").css({opacity:0}),i.find(".wording-area--2").css({opacity:1,transform:"translate(0, 0)"}),i.find(".bg-block--2").css({top:0}),i.find(".bg-block--1").css({top:"100%"})}else if(o<=80)i.find(".master-area").hide(0),i.find(".wording-area--1, .wording-area--3").css({opacity:0}),i.find(".wording-area--2").css({opacity:1,transform:"translate(0, 0)"}),i.find(".bg-block--2").css({top:0}),i.find(".bg-block--1").css({top:"100%"}),i.find(".gradient-box").css({opacity:0});else if(o<=95){var c=o-80;c<7.5?i.find(".wording-area--2").css({opacity:1-2*c/15,transform:"translate(0, ".concat(2*c*-6,"px)")}):i.find(".wording-area--2").css({opacity:0}),c>12?i.find(".wording-area--3").css({opacity:Math.abs(2*(1.5-2*c/15)),transform:"translate(0, ".concat(30*(15-c)/15*2,"px)")}):i.find(".wording-area--3").css({opacity:0}),i.find(".bg-block--2").css({top:"".concat(-1*c*10/15*10,"%")}),i.find(".bg-block--3").css({top:"".concat(40*(15-c)/15,"%")}),i.find(".master-area").hide(0),i.find(".wording-area--1").css({opacity:0}),i.find(".bg-block--1").css({top:"100%"}),i.find(".gradient-box").css({opacity:0})}else i.find(".master-area").hide(0),i.find(".wording-area--1, .wording-area--2").css({opacity:0}),i.find(".wording-area--3").css({opacity:1,transform:"translate(0, 0)"}),i.find(".bg-block--1, .bg-block--2").css({top:"100%"}),i.find(".bg-block--3").css({top:0}),i.find(".gradient-box").css({opacity:0})},getImgUrl:function(t,n){var i=e.updateZero(t,3);return n?"/media/filer_public/fed-assets/sunrise/images/video-img/video-img-svg-"+i+".svg":"/media/filer_public/fed-assets/sunrise/images/video-img/video-img-"+i+".jpg"},updateZero:function(e,t){for(var n=(e+"").length;n<t;n=e.length)e=e;return e}};return e}(),p=function(){var e={init:function(){var t=$(".sunrise-20-page .wording-area--slide");t.length>0&&$.each(t,function(t,n){var i=$(this);e.setupAnimation(i)})},setupAnimation:function(e){var t={d:"number"==typeof e.data("trigger-hook")?e.data("trigger-hook"):.05,m:"number"==typeof e.data("trigger-hook-m")?e.data("trigger-hook-m"):.65},n=new ScrollMagic.Scene({triggerElement:e[0],offset:0,reverse:!1,triggerHook:d.isMobile()?t.m:t.d}).on("enter",function(t){e.addClass("active")}).addTo(s);$(window).resize(function(){n.triggerHook(d.isMobile()?t.m:t.d)})}};return e}(),v=function(){var e={playActive:[],init:function(){var t=$(".section-hand-tracking");t.length>0&&$.each(t,function(t,n){var i=$(this);e.setupfunction(i,t)})},setupfunction:function(t,n){var i=t.find(".video-list .video-item").eq(0),o=t.find(".video-area");e[n]={},e[n].playActive=0,e[n].playStop=!!d.isMobile(),e[n].forceStop=!1,$(window).resize(function(){e[n].forceStop||(e[n].playStop=!!d.isMobile())}),i.addClass("active"),i.find(".text-info").show();var r=function(){return d.isMobile()?1.2*$(window).innerHeight():.8*$(window).innerHeight()},s=new ScrollMagic.Scene({triggerElement:o[0],duration:r}).addTo(a).on("leave enter",function(i){"enter"===i.type?e.autoPlay(t,"play",n):"leave"===i.type&&e.autoPlay(t,"pause",n)});t.find(".video-list .video-item").each(function(i){var a=$(this).find("video")[0],o=$(this).find(".video-bg");a.addEventListener("ended",function(){!1===e[n].playStop?setTimeout(function(){e.autoPlay(t,"finish",n)},500):o.addClass("played")},!1),$(this).find(".text-title").on("click",function(a){a.preventDefault(),e[n].playStop=!0,e[n].forceStop=!0,e.autoPlay(t,"click",n,i),null!==s&&(s.destroy(!0),s=null)}),o.find(".video-replay").on("click",function(a){a.preventDefault(),e.autoPlay(t,"click",n,i)})})},autoPlay:function(t,n,i,a){var o=e[i].playActive,r=t.find(".video-list .video-item").eq(o).find("video");switch(n){case"play":t.find(".video-bg").removeClass("played"),r[0].play();break;case"pause":r[0].pause();break;case"finish":var s=t.find(".video-list .video-item").length,d=o+2>s?0:o+1;e[i].playActive=d,e.changeVideo(t,o,d,i);break;case"click":r[0].pause(),r[0].currentTime=0,e[i].playActive=a,e.changeVideo(t,o,a,i)}},changeVideo:function(t,n,i,a){var o=t.find(".video-list .video-item").eq(n),r=o.find(".text-info"),s=t.find(".video-list .video-item").eq(i),d=s.find(".text-info");n!==i&&(o.removeClass("active"),r.slideUp(),s.addClass("active"),d.slideDown()),e.autoPlay(t,"play",a)}};return e}(),m=function(){var e={setupVideoSource:function(t){var n=t,i=n[0];$.each(n.find("video"),function(t,o){var r=$(this),s=r[0],d=r.data("force-preload"),c={ld:{videoPoster:r.data("poster-path"),videoPath:r.data("video-path")},d:{videoPoster:r.data("d-poster-path"),videoPath:r.data("d-video-path")},l:{videoPoster:r.data("l-poster-path"),videoPath:r.data("l-video-path")},t:{videoPoster:r.data("t-poster-path"),videoPath:r.data("t-video-path")}};if(void 0!==d&&"yes"===d){e.changeView(r,c);var l=s.play();void 0!==l&&l.catch(function(e){}).then(function(){s.pause(),r.addClass("loaded")})}else{new ScrollMagic.Scene({triggerElement:i,offset:-640}).addTo(a).on("enter",function(t){"enter"!==t.type||r.hasClass("loaded")||(e.changeView(r,c),s.pause(),s.load(),r.addClass("loaded"))})}s.addEventListener("loadeddata",function(){e.setupScrollAndPlay(n,i,r,s)},!1)})},changeView:function(e,t){var n=function(e,t){var n=$(window).innerWidth(),i=n>1919?"ld":n>1365?"d":n>991?"l":"t",a=t[i];e.hasClass("video-changeView-".concat(i))||(e.removeClass("video-changeView-ld video-changeView-d video-changeView-l video-changeView-t"),e.addClass("video-changeView-".concat(i)),e.attr("poster",a.videoPoster||t.d.videoPoster),e[0].src=a.videoPath||t.d.videoPoster)};n(e,t),$(window).resize(function(){n(e,t)})},getPosition:function(e,t){var n,i,a=window.innerHeight,o=0,r=0,s=e.outerHeight();return d.isMobile()?(n=-15,i=-15,void 0!==t.data("md-top-trigger-playing")&&(n=t.data("md-top-trigger-playing")),o=parseInt(s*(n/100),10),void 0!==t.data("md-bottom-trigger-playing")&&(i=t.data("md-bottom-trigger-playing")),"yes"===t.data("md-trigger-vh")&&(s=a),r=s-parseInt(s*(i/100),10)-o):(n=5,i=5,void 0!==t.data("top-trigger-playing")&&(n=t.data("top-trigger-playing")),o=parseInt(s*(n/100),10),void 0!==t.data("bottom-trigger-playing")&&(i=t.data("bottom-trigger-playing")),"yes"===t.data("trigger-vh")&&(s=a),r=s-parseInt(s*(i/100),10)-o),[o,r]},updatePosition:function(t,n,i){var a=e.getPosition(t,n),o=a[0],r=a[1];i.offset(o),i.duration(r)},setupReplayBtn:function(e,t,n){var i=e.find(".replay-block");void 0!==i&&(i.addClass("show"),i.on("click",function(e){e.preventDefault(),n.play(),t.addClass("playing"),i.removeClass("show")}))},setupScrollAndPlay:function(t,n,i,a){var r,s=i.data("loop"),d=i.data("play-once"),c=i.data("leave-pause")||"no",l=e.getPosition(t,i),u=l[0],f=l[1],g=(i.outerHeight(),t.outerHeight(),function(){void 0!==d&&"yes"===d||(a.pause(),i.removeClass("playing"))});g(),r=new ScrollMagic.Scene({triggerElement:n,offset:u,duration:f}).addTo(o).on("enter leave",function(e){switch(e.type){case"enter":if(i.hasClass("loaded")&&!i.hasClass("playing")){var t=a.play();void 0!==t&&t.catch(function(e){}).then(function(){i.addClass("playing")})}break;case"leave":"yes"===c&&g()}}),a.addEventListener("ended",function(){void 0!==d&&"yes"===d?(i.addClass("playing"),e.setupReplayBtn(t,i,a)):void 0!==s&&"no"===s?(i.removeClass("playing"),e.setupReplayBtn(t,i,a)):i.hasClass("playing")&&(i.attr("loop","loop"),a.play())},!1),$(window).resize(function(n){e.updatePosition(t,i,r)})}};return e}(),y=function(){return{init:function(){$(".section--scroll-video-play").length>0&&$.each($(".section--scroll-video-play"),function(e,t){var n=$(this),i=n.find(".video-bg");m.setupVideoSource(i)})}}}(),h={init:function(e){new YKU.Player("player",{styleid:"0",client_id:"2a8fda48fc709b73",vid:e,newPlayer:!1,autoplay:!0,show_related:!1,events:{onPlayEnd:function(){b.hideModal()},onPlayStart:function(){b.showModal(),b.setupCloseModalBtn()}}})}},w={init:function(e){function t(e){e.target.playVideo(),b.showModal(),b.setupCloseModalBtn()}function n(e){0===e.data&&b.hideModal()}var i;!function(){i=new YT.Player("player",{height:"390",width:"640",videoId:e,events:{onReady:t,onStateChange:n}})}()}},b={init:function(){var e=document.querySelectorAll(".section-trailer-video .box-video");e&&e.forEach(function(e){var t=e.querySelector(".play-modal-video-btn"),n=t.getAttribute("data-vtype"),i=t.getAttribute("data-vid");t.addEventListener("click",function(e){e.preventDefault(),"youtube"===n?w.init(i):(h.init(i),b.showModal(),b.setupCloseModalBtn())})})},setupCloseModalBtn:function(){document.querySelector(".modal-overlap-container .btn-close").addEventListener("click",function(e){e.preventDefault(),b.hideModal()})},showModal:function(){var e=document.querySelector(".modal-overlap-container"),t=document.getElementsByTagName("html")[0],n=document.body;e.classList.add("show"),t.classList.add("fixed"),n.classList.add("fixed")},hideModal:function(){var e=document.querySelector(".modal-overlap-container"),t=document.getElementsByTagName("html")[0],n=document.body;e.classList.remove("show"),t.classList.remove("fixed"),n.classList.remove("fixed"),document.querySelector(".modal-overlap-container .align-center").innerHTML="<div id='player'></div>"}},S={init:function(){if("undefined"!=typeof LazyLoad){new LazyLoad({elements_selector:".lazy-img",threshold:2e3})}}};window.onload=function(){},$(function(){u.init(),c.init(),g.init(),p.init(),l.init(),b.init(),y.init(),f.init(),S.init(),v.init()})},{"./libs/typemate":2}],2:[function(e,t,n){"use strict";function i(e){return s(e)||r(e)||o(e)||a()}function a(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function o(e,t){if(e){if("string"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?d(e,t):void 0}}function r(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function s(e){if(Array.isArray(e))return d(e)}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function u(e,t,n){return t&&l(e.prototype,t),n&&l(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}var f=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};c(this,e);var a=this;a.settings=Object.assign({minWords:4,selector:"p",ignoreClass:"js-typemate__ignore",ignoreExistingSpaceChars:!1},n),a.elems=i(void 0===t?document.querySelectorAll(a.settings.selector):t.querySelectorAll(a.settings.selector))}return u(e,[{key:"apply",value:function(){var e=this;e.elems.map(function(t){if(t.classList.contains(e.settings.ignoreClass))return!1;if(e.shouldElementBeIgnored(t))return!1;var n="",i=t.innerHTML.trim().replace(/&nbsp;/g," ").split(/ (?=[^>]*(?:<|$))/);i.length<e.settings.minWords||(i=e.preventOrphans(i),n=i.join(" "),n=n.replace(/&nbsp; /g,"&nbsp;"),t.innerHTML=n)})}},{key:"preventOrphans",value:function(e){if(window.innerWidth>991.98){var t=e[e.length-2];e[e.length-2]=t+"&nbsp;"}else{var n=e[e.length-2];e[e.length-2]=n+"&nbsp;"}return e}},{key:"reset",value:function(){var e=this;e.elems.map(function(t){if(e.shouldElementBeIgnored(t))return!1;t.innerHTML=t.innerHTML.replace(/&nbsp;/g," ")})}},{key:"shouldElementBeIgnored",value:function(e){var t=this;return!!(e.innerHTML.indexOf("&nbsp;")>-1&&t.settings.ignoreExistingSpaceChars)}}]),e}();t.exports=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new f(e,t)}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
